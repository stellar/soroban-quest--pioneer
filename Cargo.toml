# This file serves as a manifest that describes how our project is organized,
# how it should function, dependencies, and other metadata.
# Each of the quests also has its own Cargo.toml file, with more information.
# Check one out at ./quests/0-hello-world/Cargo.toml.

# A workspace is a collection of different Rust packages that are managed
# together, using the same commands, configuration, etc.
[workspace]
# We want to use v2 of the cargo dependency resolver.
resolver = "2"
# Our workspace members include the packages in the quests directory.
members = [
    "quests/0-hello-world"
]

# The "release" profile specifies compiler options for our production build.
[profile.release]
# Optimize for binary size, turn off loop vectorization.
opt-level = "z"
# A panic should occur in the event of a runtime integer overflow.
overflow-checks = true
# Don't include any debug into in the compiled binary.
debug = 0
# Remove auxiliary debug and symbol data from the compiled binary.
strip = "symbols"
# Don't include runtime validation when building for production.
debug-assertions = false
# Terminate the process when the code panics.
panic = "abort"
# Prefer a slow compilation time, for a faster performing binary.
codegen-units = 1
# Use link time optimizations to generate a better optimzed binary.
lto = true

# The dependencies we define here are inherited by all members of our workspace.
# We could specify version numbers, crate URLs, and even specific commits to be
# used for a given dependency.
[workspace.dependencies.soroban-sdk]
version = "22.0.3"
